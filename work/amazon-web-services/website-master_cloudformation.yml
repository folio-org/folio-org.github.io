AWSTemplateFormatVersion: 2010-09-09
Metadata:
  'AWS::CloudFormation::Designer':
    440feda6-b280-4cad-97aa-310a1c3aeb64:
      size:
        width: 60
        height: 60
      position:
        x: 150
        'y': 210
      z: 1
      embeds: []
      dependson:
        - 3de6d6e7-96b5-4bf9-841e-914051d50846
      isrelatedto:
        - 3de6d6e7-96b5-4bf9-841e-914051d50846
    933166eb-796d-4e80-a2d6-e9f4cb346d48:
      size:
        width: 60
        height: 60
      position:
        x: 30
        'y': 60
      z: 1
      embeds: []
      isrelatedto:
        - 933166eb-796d-4e80-a2d6-e9f4cb346d48
        - db9f9a17-91ed-43f6-9538-7982158bebce
    9f1e1657-35ee-4cec-b080-6b1514b4d643:
      source:
        id: e3ba48e2-ae39-48b8-8fed-0005c4238ce6
      target:
        id: 933166eb-796d-4e80-a2d6-e9f4cb346d48
      z: 11
    fdaf6a44-b32e-4c75-8a91-1756e49d0736:
      source:
        id: e3ba48e2-ae39-48b8-8fed-0005c4238ce6
      target:
        id: 440feda6-b280-4cad-97aa-310a1c3aeb64
      z: 11
    db9f9a17-91ed-43f6-9538-7982158bebce:
      size:
        width: 60
        height: 60
      position:
        x: 150
        'y': 60
      z: 1
      embeds: []
      dependson:
        - 440feda6-b280-4cad-97aa-310a1c3aeb64
      isrelatedto:
        - 440feda6-b280-4cad-97aa-310a1c3aeb64
    5dd4ffbf-9fed-480a-a0f2-c863d58f159e:
      source:
        id: db9f9a17-91ed-43f6-9538-7982158bebce
      target:
        id: 440feda6-b280-4cad-97aa-310a1c3aeb64
      z: 11
    3de6d6e7-96b5-4bf9-841e-914051d50846:
      size:
        width: 60
        height: 60
      position:
        x: 390
        'y': 210
      z: 1
      embeds: []
      isrelatedto:
        - b624f20c-b645-4277-ad42-12373ed9fc75
        - edcb3b5d-d51d-450b-8bb4-2102ea4e48b0
    b624f20c-b645-4277-ad42-12373ed9fc75:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 240
      z: 1
      embeds: []
      dependson:
        - edcb3b5d-d51d-450b-8bb4-2102ea4e48b0
      isrelatedto:
        - edcb3b5d-d51d-450b-8bb4-2102ea4e48b0
        - 460e37b9-5a5e-4e40-bb4f-3e3e1812de7a
    27a38a95-180c-4816-94dd-bdd8a422a24f:
      source:
        id: 440feda6-b280-4cad-97aa-310a1c3aeb64
      target:
        id: 3de6d6e7-96b5-4bf9-841e-914051d50846
      z: 11
    c1c24a0e-2354-4f54-8811-84611f37f71a:
      size:
        width: 60
        height: 60
      position:
        x: 270
        'y': 180
      z: 1
      embeds: []
      isassociatedwith:
        - 3de6d6e7-96b5-4bf9-841e-914051d50846
      isrelatedto:
        - 440feda6-b280-4cad-97aa-310a1c3aeb64
    171e46d2-f281-4e5b-bdf5-792b7de9b847:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 70
      z: 1
      embeds: []
    2c48c8dd-e46f-4e1b-84f1-78691af3bebe:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 70
      z: 1
      embeds: []
      isrelatedto:
        - 171e46d2-f281-4e5b-bdf5-792b7de9b847
    5dadd00b-4e5c-4378-9cbb-8c979fe4216d:
      size:
        width: 60
        height: 60
      position:
        x: 690
        'y': 240
      z: 2
      parent: 36aeebf0-58a6-4554-8081-118ba6eef68e
      embeds: []
      dependson:
        - 36aeebf0-58a6-4554-8081-118ba6eef68e
      isrelatedto:
        - 2c48c8dd-e46f-4e1b-84f1-78691af3bebe
    c59d5ed8-abc2-4337-bfc1-69a2700f001e:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 150
      z: 1
      embeds: []
      isassociatedwith:
        - 171e46d2-f281-4e5b-bdf5-792b7de9b847
    bb638d8a-6094-4cfd-9506-079048c2e1f0:
      size:
        width: 60
        height: 60
      position:
        x: 750
        'y': 90
      z: 1
      embeds: []
    58a62a0c-c5e9-417d-8708-ff4027244a7b:
      size:
        width: 60
        height: 60
      position:
        x: 870
        'y': 90
      z: 1
      embeds: []
      isrelatedto:
        - bb638d8a-6094-4cfd-9506-079048c2e1f0
    36aeebf0-58a6-4554-8081-118ba6eef68e:
      size:
        width: 150
        height: 150
      position:
        x: 660
        'y': 180
      z: 1
      embeds:
        - 5dadd00b-4e5c-4378-9cbb-8c979fe4216d
    fee20551-28de-4c79-b0f8-6c754f6aa999:
      source:
        id: 5dadd00b-4e5c-4378-9cbb-8c979fe4216d
      target:
        id: 36aeebf0-58a6-4554-8081-118ba6eef68e
      z: 2
    b057b6c1-b7ca-46ff-be96-8e20ba857e06:
      size:
        width: 60
        height: 60
      position:
        x: 840
        'y': 240
      z: 1
      embeds: []
      dependson:
        - 5dadd00b-4e5c-4378-9cbb-8c979fe4216d
    edcb3b5d-d51d-450b-8bb4-2102ea4e48b0:
      size:
        width: 60
        height: 60
      position:
        x: 390
        'y': 330
      z: 1
      embeds: []
    531e4402-565d-4b29-9c5e-0c2ae284eb9b:
      size:
        width: 60
        height: 60
      position:
        x: 150
        'y': 330
      z: 1
      embeds: []
      isrelatedto:
        - edcb3b5d-d51d-450b-8bb4-2102ea4e48b0
    99c1381c-b6d5-473a-a38c-52b3ab59d40b:
      size:
        width: 60
        height: 60
      position:
        x: 930
        'y': 330
      z: 1
      embeds: []
      isrelatedto:
        - edcb3b5d-d51d-450b-8bb4-2102ea4e48b0
        - b624f20c-b645-4277-ad42-12373ed9fc75
        - a706db49-260a-4370-ac47-a81af60d6461
    460e37b9-5a5e-4e40-bb4f-3e3e1812de7a:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 380
      z: 1
      embeds: []
      isrelatedto:
        - 99c1381c-b6d5-473a-a38c-52b3ab59d40b
    a706db49-260a-4370-ac47-a81af60d6461:
      size:
        width: 60
        height: 60
      position:
        x: 930
        'y': 230
      z: 1
      embeds: []
Resources:
  GitHubWebHook:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: WebsiteBuildLambda
      DisplayName: Receive Webhook calls from GitHub
      Subscription:
        - Endpoint: !GetAtt GitHubHookLambda.Arn
          Protocol: lambda
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 440feda6-b280-4cad-97aa-310a1c3aeb64
    DependsOn:
      - GitHubHookLambda
  GitHubHookUserKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref GitHubHookUser
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 933166eb-796d-4e80-a2d6-e9f4cb346d48
  GitHubHookUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Ref AWSUserReceivingGitHubHooks
      Policies:
        - PolicyName: GitHubHookPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'sns:Publish'
                Resource: !Ref GitHubWebHook
    Metadata:
      'AWS::CloudFormation::Designer':
        id: db9f9a17-91ed-43f6-9538-7982158bebce
    DependsOn:
      - GitHubWebHook
  GitHubHookLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: GitHubHookLambdaFunction
      Runtime: python2.7
      Handler: GitHubHook.handler
      Code:
        S3Bucket: !Ref WebsiteCFNArtifactsBucket
        S3Key: GitHubHook-Lambda.zip
      Description: Handle GitHub WebHooks
      DeadLetterConfig:
        TargetArn: !Ref WebsiteErrorQueue
      Environment:
        Variables:
          WebsiteStackName: !Sub '${AWS::StackName}'
          WebsiteMasterBucket: !Sub '${WebsiteMasterBucket}'
          WebsiteDNSName: !Sub '${WebsiteDNSName}'
          WebsiteCFNArtifactsBucket: !Sub '${WebsiteCFNArtifactsBucket}'
          GitHubUsername: !Sub '${GitHubUsername}'
          GitHubAccessToken: !Sub '${GitHubAccessToken}'
          WebsiteBranchCFNNotification: !Sub '${WebsiteBranchCFNNotification}'
      Timeout: 300
      Role: !GetAtt GitHubHookLambdaExecutionRole.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3de6d6e7-96b5-4bf9-841e-914051d50846
  GitHubHookLambdaPermission:
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt GitHubHookLambda.Arn
      Principal: sns.amazonaws.com
      SourceArn: !Ref GitHubWebHook
    Type: 'AWS::Lambda::Permission'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c1c24a0e-2354-4f54-8811-84611f37f71a
  GitHubHookLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      Policies:
        - PolicyName: CloudwatchLogs
          PolicyDocument:
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:GetLogEvents'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:*'
                Effect: Allow
        - PolicyName: ExecuteGitHubHookLambda
          PolicyDocument:
            Statement:
              - Action: 'codebuild:StartBuild'
                Resource:
                  - !Sub >-
                    arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${WebsiteCodeBuild}
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}Branch*
                Effect: Allow
              - Action:
                  - 's3:*'
                  - 's3:PutBucketPolicy'
                  - 's3:PutBucketWebsite'
                  - 's3:PutBucket*'
                Resource: !Sub 'arn:aws:s3:::*'
                Effect: Allow
              - Action: 'route53:ChangeResourceRecordSets'
                Resource: !Sub 'arn:aws:route53:::hostedzone/${WebsiteHostedZone}*'
                Effect: Allow
              - Action:
                  - 'route53:ListHostedZones'
                  - 'route53:GetChange'
                Resource: '*'
                Effect: Allow
        - PolicyName: PublishNotifications
          PolicyDocument:
            Statement:
              - Action: 'sns:Publish'
                Resource:
                  - !Ref WebsiteBranchCFNNotification
                  - !Ref WebsiteErrorQueue
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
    DependsOn:
      - WebsiteErrorQueue
      - WebsiteBranchCFNNotification
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b624f20c-b645-4277-ad42-12373ed9fc75
  WebsiteErrorQueue:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: WebsiteBuildLambdaDeadLetterQueue
      DisplayName: SNS for failed activities of the Lambda and CodeBuild
    Metadata:
      'AWS::CloudFormation::Designer':
        id: edcb3b5d-d51d-450b-8bb4-2102ea4e48b0
  WebsiteMasterBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: WebsiteMasterBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebsiteMasterBucket
                - /*
      Bucket: !Ref WebsiteMasterBucket
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c59d5ed8-abc2-4337-bfc1-69a2700f001e
  WebsiteMasterDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Origins:
          - CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginProtocolPolicy: http-only
            DomainName: !Join
              - ''
              - - !Ref WebsiteMasterBucket
                - !FindInMap
                  - Region2S3WebsiteSuffix
                  - !Ref 'AWS::Region'
                  - Suffix
            Id: WebsiteMasterBucket
        Enabled: 'true'
        DefaultRootObject: index.html
        HttpVersion: http2
        IPV6Enabled: true
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          TargetOriginId: WebsiteMasterBucket
          ForwardedValues:
            QueryString: 'true'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        PriceClass: PriceClass_All
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2c48c8dd-e46f-4e1b-84f1-78691af3bebe
  WebsiteMasterBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 171e46d2-f281-4e5b-bdf5-792b7de9b847
  WebsiteHostedZone:
    Type: 'AWS::Route53::HostedZone'
    Properties:
      Name: !Sub '${WebsiteDNSName}.'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 36aeebf0-58a6-4554-8081-118ba6eef68e
  WebsiteMasterRecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Name: !Sub '${WebsiteDNSName}.'
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt WebsiteMasterDistribution.DomainName
      HostedZoneId: !Ref WebsiteHostedZone
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5dadd00b-4e5c-4378-9cbb-8c979fe4216d
    DependsOn:
      - WebsiteHostedZone
  WebsiteCert:
    Type: 'AWS::CertificateManager::Certificate'
    Properties:
      DomainName: !Ref WebsiteDNSName
      DomainValidationOptions:
        - DomainName: !Ref WebsiteDNSName
          ValidationDomain: !Ref WebsiteDNSName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b057b6c1-b7ca-46ff-be96-8e20ba857e06
    DependsOn:
      - WebsiteMasterRecordSet
  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetObjectVersion'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bb638d8a-6094-4cfd-9506-079048c2e1f0
  WebsiteCodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-WebsiteJekyllBuild'
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Description: Build a branch of the website
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/ruby:2.3.1'
      Source:
        Location: !Ref GitHubWebsiteRepoURL
        Type: GITHUB
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 58a62a0c-c5e9-417d-8708-ff4027244a7b
  CodeBuildFinishedRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: Rule fires when Website CodeBuild finishes
      EventPattern:
        source:
          - aws.codebuild
        detail-type:
          - CodeBuild Build State Change
        detail:
          build-status:
            - FAILED
            - SUCCEEDED
            - STOPPED
          project-name:
            - !Ref WebsiteCodeBuild
      State: ENABLED
      Targets:
        - Arn: !Ref CodeBuildFinishedMessage
          Id: WebsiteCodeBuildFinished
  CodeBuildFinishedMessage:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: !Sub "${AWS::StackName}CodeBuildFinished"
      DisplayName: SNS for when CodeBuild finishes
      Subscription:
        - Endpoint: !GetAtt CodeBuildFinishedLambda.Arn
          Protocol: lambda
  CodeBuildFinishedLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub "${AWS::StackName}CodeBuildFinishedLambdaFunction"
      Runtime: python2.7
      Handler: GitHubHook.codebuilder_result_handler
      Code:
        S3Bucket: !Ref WebsiteCFNArtifactsBucket
        S3Key: GitHubHook-Lambda.zip
      Description: Handle events from when the CodeBuild project finishes
      DeadLetterConfig:
        TargetArn: !Ref WebsiteErrorQueue
      Environment:
        Variables:
          WebsiteStackName: !Sub '${AWS::StackName}'
          WebsiteMasterBucket: !Sub '${WebsiteMasterBucket}'
          WebsiteDNSName: !Sub '${WebsiteDNSName}'
          WebsiteCFNArtifactsBucket: !Sub '${WebsiteCFNArtifactsBucket}'
          GitHubUsername: !Sub '${GitHubUsername}'
          GitHubAccessToken: !Sub '${GitHubAccessToken}'
          WebsiteBranchCFNNotification: !Sub '${WebsiteBranchCFNNotification}'
      Role: !GetAtt GitHubHookLambdaExecutionRole.Arn
  CodeBuildFailedRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: >-
        Rule fires when Website CodeBuild fails to send notification to error
        SNS
      EventPattern:
        source:
          - aws.codebuild
        detail-type:
          - CodeBuild Build State Change
        detail:
          build-status:
            - FAILED
      State: ENABLED
      Targets:
        - Arn: !Ref WebsiteErrorQueue
          Id: WebsiteCodeBuildError
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 531e4402-565d-4b29-9c5e-0c2ae284eb9b
  WebsiteBranchCFNNotification:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: WebsiteBranchCFNNotification
      DisplayName: SNS for activities creating a website branch stack
      Subscription:
        - Endpoint: !GetAtt WebsiteBranchCNFStatus.Arn
          Protocol: lambda
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 460e37b9-5a5e-4e40-bb4f-3e3e1812de7a
  WebsiteBranchCNFStatus:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: WebsiteBranchCNFStatusFunction
      Runtime: python2.7
      Handler: GitHubHook.branch_cfn_handler
      Code:
        S3Bucket: !Ref WebsiteCFNArtifactsBucket
        S3Key: GitHubHook-Lambda.zip
      Description: Handle status messages from website branch stack creation
      DeadLetterConfig:
        TargetArn: !Ref WebsiteErrorQueue
      Environment:
        Variables:
          WebsiteStackName: !Sub '${AWS::StackName}'
          WebsiteMasterBucket: !Sub '${WebsiteMasterBucket}'
          WebsiteDNSName: !Sub '${WebsiteDNSName}'
          WebsiteCFNArtifactsBucket: !Sub '${WebsiteCFNArtifactsBucket}'
          GitHubUsername: !Sub '${GitHubUsername}'
          GitHubAccessToken: !Sub '${GitHubAccessToken}'
      Role: !GetAtt WebsiteBranchBuildLambdaExecutionRole.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 99c1381c-b6d5-473a-a38c-52b3ab59d40b
  WebsiteBranchBuildLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      Policies:
        - PolicyName: CloudwatchLogs
          PolicyDocument:
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:GetLogEvents'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:*'
                Effect: Allow
        - PolicyName: ExecuteGitHubHookLambda
          PolicyDocument:
            Statement:
              - Action: 'codebuild:StartBuild'
                Resource:
                  - !Sub >-
                    arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${WebsiteCodeBuild}
                Effect: Allow
        - PolicyName: PublishNotifications
          PolicyDocument:
            Statement:
              - Action: 'sns:Publish'
                Resource:
                  - !Ref WebsiteErrorQueue
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a706db49-260a-4370-ac47-a81af60d6461
Parameters:
  GitHubWebsiteRepoURL:
    Type: String
    Description: URL of the GitHub repository containing the Jekyll website source files
  AWSUserReceivingGitHubHooks:
    Type: String
    Default: GitHub_Website_WebHook
    Description: The AWS username used by GitHub to receive webhook messages
  GitHubUsername:
    Type: String
    Description: >-
      The userid of a GitHub user with permissions to receive Status API
      messages on repo
  GitHubAccessToken:
    Type: String
    Description: The Personal Access Token for the 'GitHubUsername' user
  WebsiteDNSName:
    Type: String
    Description: Domain name of the website being built
  WebsiteCFNArtifactsBucket:
    Type: String
    Description: >-
      The name of an existing private S3 bucket that contains the CloudFormation
      artifacts (such as Lambda code)
Mappings:
  Region2S3WebsiteSuffix:
    us-east-1:
      Suffix: .s3-website-us-east-1.amazonaws.com
    us-west-1:
      Suffix: .s3-website-us-west-1.amazonaws.com
    us-west-2:
      Suffix: .s3-website-us-west-2.amazonaws.com
    eu-west-1:
      Suffix: .s3-website-eu-west-1.amazonaws.com
    ap-northeast-1:
      Suffix: .s3-website-ap-northeast-1.amazonaws.com
    ap-northeast-2:
      Suffix: .s3-website-ap-northeast-2.amazonaws.com
    ap-southeast-1:
      Suffix: .s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      Suffix: .s3-website-ap-southeast-2.amazonaws.com
    ap-south-1:
      Suffix: .s3-website-ap-south-1.amazonaws.com
    us-east-2:
      Suffix: .s3-website-us-east-2.amazonaws.com
    sa-east-1:
      Suffix: .s3-website-sa-east-1.amazonaws.com
    cn-north-1:
      Suffix: .s3-website.cn-north-1.amazonaws.com.cn
    eu-central-1:
      Suffix: .s3-website.eu-central-1.amazonaws.com
Outputs:
  GitHubWebHookId:
    Value: !Ref GitHubWebHook
    Description: SNS topic to receive messages from GitHub pre-build integration
    Export:
      Name: !Sub '${AWS::StackName}-GitHubWebHookId'
  AccessKeyGitHubHookUser:
    Value: !Ref GitHubHookUserKey
  SecretKeyGitHubHookUser:
    Value: !GetAtt GitHubHookUserKey.SecretAccessKey
  MasterBucketName:
    Value: !Ref WebsiteMasterBucket
    Description: Name of S3 bucket that holds the website of the master branch
    Export:
      Name: !Sub '${AWS::StackName}-MasterBucketName'
  MasterBucketURL:
    Value: !Join
      - ''
      - - 'https://'
        - !Ref WebsiteMasterBucket
        - !FindInMap
          - Region2S3WebsiteSuffix
          - !Ref 'AWS::Region'
          - Suffix
    Description: URL to S3 bucket that holds the website of the master branch
  WebsiteDNSName:
    Value: !Ref WebsiteDNSName
    Description: DNS name of the developer documentation
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteDNSName'
